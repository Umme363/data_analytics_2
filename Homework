{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "Untitled1.ipynb",
      "provenance": [],
      "authorship_tag": "ABX9TyMo2N82L4VkU5rlErNlIsJ6",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/Umme363/data_analytics_2/blob/main/Homework\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "qT76slf9_gO1"
      },
      "source": [
        ""
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "3XlIP9Vf_hnT"
      },
      "source": [
        "Unit2_L2\n",
        "1. What is Python and why is it useful?\n",
        "        \n",
        "\n",
        "   Python is a high level programming language. Python is used for AI,   maching learning, operating system etc. "
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "UM1qL-ungM5Q"
      },
      "source": [
        "2. Are the following variable names allowed in python?\n",
        "1_message - not allowed,\n",
        "Greeting_message - allowed,\n",
        "Message_1 - allowed,\n",
        "First name - not allowed,\n",
        "Full_name - allowed,\n"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "t5bt6uXFhyQl",
        "outputId": "44640774-2711-47ec-d3a9-e948124150eb"
      },
      "source": [
        "var = \"Hello There!\"\n",
        "print(var)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Hello There!\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "vUuSoVwgiL7u",
        "outputId": "71199eaf-3a72-4fc6-8932-b19304eb48c4"
      },
      "source": [
        "first_name = \"umme\"\n",
        "last_name = \"habiba\"\n",
        "email_extension = \"@gmail.com\"\n",
        "print(first_name+last_name+email_extension)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "ummehabiba@gmail.com\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "NZ0XqsFvi9Or",
        "outputId": "ee27dcad-a051-4971-aae0-c1ffb55599a1"
      },
      "source": [
        "name = \"Umme\"\n",
        "print(name.lower())\n",
        "print(name.upper())"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "umme\n",
            "UMME\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "rdGDOPk9jfET",
        "outputId": "7d0f29ba-78c5-45e8-a00e-3b1ed09816dc"
      },
      "source": [
        "date = 15\n",
        "var = \"Do you want to hang out on the \" + str(date) +\"th of this month?\"\n",
        "print(var)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Do you want to hang out on the 15th of this month?\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "wmSYRbpmkkAE",
        "outputId": "f43c1e3d-1ce4-44be-ec04-bf533e150d8a"
      },
      "source": [
        "#Unit2_L3\n",
        "list = [\"sister sister\", \"how I met your mother\", \"the good doctor\", \"the originals\", \"agents of shield\"]\n",
        "print(list)\n",
        "list.sort()\n",
        "print(list)\n",
        "list.sort(reverse=True)\n",
        "print(list)\n",
        "len(list)"
      ],
      "execution_count": 31,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "['sister sister', 'how I met your mother', 'the good doctor', 'the originals', 'agents of shield']\n",
            "['agents of shield', 'how I met your mother', 'sister sister', 'the good doctor', 'the originals']\n",
            "['the originals', 'the good doctor', 'sister sister', 'how I met your mother', 'agents of shield']\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "5"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 31
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "S9EYY1OwexaG",
        "outputId": "3876f131-da4e-470c-ff1a-85cc5534ed8b"
      },
      "source": [
        "#Unit2_L4\n",
        "#Create a list that holds 5 data variables.\n",
        "My_list = [\"sister sister\", \"how I met your mother\", \"the good doctor\", \"the originals\", \"agents of shield\"]\n",
        "#Print out those variables by using a for loop.\n",
        "for i in My_list:\n",
        "  print(i)\n",
        "\n",
        "#Modify your for loop to add a message to your for loop.\n",
        "for i in My_list:\n",
        "  print(i.title() + \" is one of my favorite tv shows\")\n",
        "\n"
      ],
      "execution_count": 4,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "sister sister\n",
            "how I met your mother\n",
            "the good doctor\n",
            "the originals\n",
            "agents of shield\n",
            "Sister Sister is one of my favorite tv shows\n",
            "How I Met Your Mother is one of my favorite tv shows\n",
            "The Good Doctor is one of my favorite tv shows\n",
            "The Originals is one of my favorite tv shows\n",
            "Agents Of Shield is one of my favorite tv shows\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "p7rLWSYFhfbp",
        "outputId": "1c26d3ce-a1d2-4979-90e7-1677124f3075"
      },
      "source": [
        "#Use a for loop to print even numbers from 1-20.\n",
        "num = 20\n",
        "for i in range(1,21):\n",
        "    if i % 2 == 0:     \n",
        "      print(i, end =' ')"
      ],
      "execution_count": 21,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "2 4 6 8 10 12 14 16 18 20 "
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "XCug8J4xnEeh",
        "outputId": "894bf3bf-352a-457d-e748-4d478983ad3a"
      },
      "source": [
        "#Sort your list in alphabetic order.\n",
        "list = [\"sister sister\", \"how I met your mother\", \"the good doctor\", \"the originals\", \"agents of shield\"]\n",
        "list.sort()\n",
        "print(list)\n",
        "\n",
        "#Print out the first three elements of your list.\n",
        "print(list[0:3])\n",
        "\n",
        "#Print out the last two elements of your list.\n",
        "print(list[3:5])\n"
      ],
      "execution_count": 44,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "['agents of shield', 'how I met your mother', 'sister sister', 'the good doctor', 'the originals']\n",
            "['agents of shield', 'how I met your mother', 'sister sister']\n",
            "['the good doctor', 'the originals']\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "OsSHF1cOqXf2"
      },
      "source": [
        "#Lesson 5: If-elif-else Statements \n",
        "user_name = ['umme', 'admin', 'bill', 'joe', 'kate']\n",
        "\n",
        "for username in user_name:\n",
        "    if username == 'admin':\n",
        "        print(\"Hello admin, welcome back! what would you like to see today?\")\n",
        "    else:\n",
        "        print(\"Hello \" + username + \", welcome to our login page\")"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "HAeJXqkGy0tL",
        "outputId": "5b9417ba-2573-4009-efb3-a9ae5ff190d2"
      },
      "source": [
        "numbers = [1,2,3,4,5,6,7,8,9,10]\n",
        "\n",
        "for number in numbers:\n",
        "    if number == 1:\n",
        "        print(\"1st\")\n",
        "    elif number == 2:\n",
        "        print(\"2nd\")\n",
        "    elif number == 3:\n",
        "        print(\"3rd\")\n",
        "    else:\n",
        "        print(str(number)+ \"th\")"
      ],
      "execution_count": 17,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "1st\n",
            "2nd\n",
            "3rd\n",
            "4th\n",
            "5th\n",
            "6th\n",
            "7th\n",
            "8th\n",
            "9th\n",
            "10th\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "_Qgtkuguz9BL",
        "outputId": "65f78765-95f4-47e1-f668-d5579a9f1b02"
      },
      "source": [
        "#Lesson:6 Unit 2 – Python Dictionaries \n",
        "name = {'first_name': 'Jhon','last_name': 'Doe'}\n",
        "#Print out those variables stored in your previous dictionary. \n",
        "print(name['first_name'] + \" \" + name['last_name'])\n",
        "#Add a message to those variables on printing: for example: “Hello, firstname lastname!”\n",
        "print(\"Hello, \" + name['first_name'] + \" \" + name['last_name'])\n"
      ],
      "execution_count": 11,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Jhon Doe\n",
            "Hello, Jhon Doe\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "w6v3_TMK5ywE",
        "outputId": "ba7b4a4a-4532-4448-ab22-a90e72f2711b"
      },
      "source": [
        "#Create a dictionary that holds 2 key: value pairs:\n",
        "dic = {'name': 'Habiba', 'age': '21'}\n",
        "print(dic['name'])\n",
        "print(dic['age'])"
      ],
      "execution_count": 18,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Habiba\n",
            "21\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Os-OSTA26FDB",
        "outputId": "cfc8086a-c1ce-4084-9e8f-1a656ba917f3"
      },
      "source": [
        "#Create a nested dictionary containing three dictionaries\n",
        "dic = {'favorite pets': 'cat', 'travel locations': 'italy', 'favorite food': 'chocolate'}\n",
        "for i in dic:\n",
        "  print(dic[i])"
      ],
      "execution_count": 15,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "cat\n",
            "italy\n",
            "chocolate\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "bcAM2UpG7m5M"
      },
      "source": [
        ""
      ],
      "execution_count": null,
      "outputs": []
    }
  ]
}